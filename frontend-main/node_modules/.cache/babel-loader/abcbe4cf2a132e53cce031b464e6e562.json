{"ast":null,"code":"import axios from \"axios\";\nconst URL = 'http://localhost:4000/api';\nexport const login2FA = async data => {\n  try {\n    const result = await axios.post(`${URL}/auth/login2FA`, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (result.status === 200) {\n      return {\n        error: false,\n        data: null,\n        msg: result.data.msg\n      };\n    }\n\n    return {\n      error: true,\n      data: null,\n      msg: 'Error interno del servidor'\n    };\n  } catch (error) {\n    if (error && error.response && error.response.data && error.response.data.msg) {\n      return {\n        error: true,\n        data: null,\n        msg: error.response.data.msg\n      };\n    }\n\n    console.log(error.response);\n    return {\n      error: true,\n      data: null,\n      msg: 'Error interno del servidor'\n    };\n  }\n};\nexport const verifyPhoneCode = async data => {\n  try {\n    const result = await axios.post(`${URL}/auth/verifyPhoneCode`, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (result.status === 200) {\n      return {\n        error: false,\n        data: {\n          token: result.data.token\n        },\n        msg: result.data.msg\n      };\n    }\n\n    return {\n      error: true,\n      data: null,\n      msg: 'Error interno del servidor'\n    };\n  } catch (error) {\n    if (error && error.response && error.response.data && error.response.data.msg) {\n      return {\n        error: true,\n        data: null,\n        msg: error.response.data.msg\n      };\n    }\n\n    console.log(error.response);\n    return {\n      error: true,\n      data: null,\n      msg: 'Error interno del servidor'\n    };\n  }\n};\nexport const register = async data => {\n  try {\n    const result = await axios.post(`${URL}/auth/register`, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (result.status === 200) {\n      return {\n        error: false,\n        data: null,\n        msg: result.data.msg\n      };\n    }\n\n    return {\n      error: true,\n      data: null,\n      msg: 'Error interno del servidor'\n    };\n  } catch (error) {\n    if (error && error.response && error.response.data && error.response.data.msg) {\n      return {\n        error: true,\n        data: null,\n        msg: error.response.data.msg\n      };\n    }\n\n    console.log(error.response);\n    return {\n      error: true,\n      data: null,\n      msg: 'Error interno del servidor'\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/m_jim/Desktop/isw711/frontend/src/services/AuthService.js"],"names":["axios","URL","login2FA","data","result","post","headers","status","error","msg","response","console","log","verifyPhoneCode","token","register"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\n\r\nconst URL = 'http://localhost:4000/api';\r\n\r\nexport const login2FA = async (data) => {\r\n    try {\r\n        const result = await axios.post(`${URL}/auth/login2FA`, data, { headers: { 'Content-Type': 'application/json' } });\r\n        if (result.status === 200) {\r\n            return { error: false, data: null, msg: result.data.msg };\r\n        }\r\n        return { error: true, data: null, msg: 'Error interno del servidor' };\r\n    } catch (error) {\r\n        if (error && error.response && error.response.data && error.response.data.msg) {\r\n            return { error: true, data: null, msg: error.response.data.msg };\r\n        }\r\n        console.log(error.response)\r\n        return { error: true, data: null, msg: 'Error interno del servidor' };\r\n    }\r\n\r\n}\r\n\r\nexport const verifyPhoneCode = async (data) => {\r\n    try {\r\n        const result = await axios.post(`${URL}/auth/verifyPhoneCode`, data, { headers: { 'Content-Type': 'application/json' } });\r\n        if (result.status === 200) {\r\n            return { error: false, data: { token: result.data.token }, msg: result.data.msg };\r\n        }\r\n        return { error: true, data: null, msg: 'Error interno del servidor' };\r\n    } catch (error) {\r\n        if (error && error.response && error.response.data && error.response.data.msg) {\r\n            return { error: true, data: null, msg: error.response.data.msg };\r\n        }\r\n        console.log(error.response)\r\n        return { error: true, data: null, msg: 'Error interno del servidor' };\r\n    }\r\n}\r\n\r\nexport const register = async (data) => {\r\n    try {\r\n        const result = await axios.post(`${URL}/auth/register`, data, { headers: { 'Content-Type': 'application/json' } });\r\n        if (result.status === 200) {\r\n            return { error: false, data: null, msg: result.data.msg };\r\n        }\r\n        return { error: true, data: null, msg: 'Error interno del servidor' };\r\n    } catch (error) {\r\n        if (error && error.response && error.response.data && error.response.data.msg) {\r\n            return { error: true, data: null, msg: error.response.data.msg };\r\n        }\r\n        console.log(error.response)\r\n        return { error: true, data: null, msg: 'Error interno del servidor' };\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}